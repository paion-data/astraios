# Copyright Paion Data
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'setup'
description: 'CI/CD setup, such as installing JDK and fetch runbook'

inputs:
  aws-ws-pkrvars-hcl:
    description: 'HashiCorp Packer variable file'
    required: true
  ssl-certificate:
    description: 'SSL certificate file content'
    required: true
  ssl-certificate-key:
    description: 'SSL certificate key file content'
    required: true
  nginx-config-file:
    description: 'Nginx config (for SSL) file content'
    required: true
  filebeat-config-file:
    description: 'This will be gone soon'
    required: true


  aws-ws-tfvars:
    description: 'HashiCorp Terraform variable file'
    required: true
  maven-settings-xml:
    description: 'Production Maven settings.xml'
    required: true
  oauth-properties:
    description: 'WS config property file - https://paion-data.github.io/astraios/docs/configuration#oauth-2'
    required: true
  application-properties:
    description: 'WS config property file - https://paion-data.github.io/astraios/docs/configuration#core-properties'
    required: true
  jpadatastore-properties:
    description: 'WS config property file - https://paion-data.github.io/astraios/docs/configuration#elide-jpa-datastore'
    required: true
  data-models-repo-token:
    description: 'Astraios data models repo fine-grained PAT token;'
    required: true
  data-models-repo-org:
    description: 'Astraios data models repo owner, e.g. paion-data'
    required: true
  data-models-repo-name:
    description: 'Astraios data models repo name, e.g. my-jpa-data-model'
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Checkout HashiCorp deployment tool
      shell: bash
      run: git clone https://github.com/QubitPi/hashicorp-aws.git ../hashicorp-aws
    - name: Load Packer variable file
      run: echo '${{ inputs.aws-ws-pkrvars-hcl }}' > ../hashicorp-aws/hashicorp/webservice/images/aws-ws.auto.pkrvars.hcl
      shell: bash
    - name: Load SSL certificates
      run: |
        echo '${{ inputs.ssl-certificate }}' > ../hashicorp-aws/hashicorp/webservice/images/ssl.crt
        echo '${{ inputs.ssl-certificate-key }}' > ../hashicorp-aws/hashicorp/webservice/images/ssl.key
      shell: bash
    - name: Load Nginx config file (SSL)
      run: echo '${{ inputs.nginx-config-file }}' > ../hashicorp-aws/hashicorp/webservice/images/nginx.conf
      shell: bash
    - name: Load Filebeat config file
      run: echo '${{ inputs.filebeat-config-file }}' > ../hashicorp-aws/hashicorp/webservice/images/filebeat.yml
      shell: bash

    - name: Load Terraform variable file
      run: echo '${{ inputs.aws-ws-tfvars }}' > ../hashicorp-aws/hashicorp/webservice/instances/aws-ws.auto.tfvars
      shell: bash

    - name: Load Maven settings.xml
      shell: bash
      run: echo '${{ inputs.maven-settings-xml }}' > ~/.m2/settings.xml
    - name: Load webservice properties files
      shell: bash
      run: |
        echo '${{ inputs.oauth-properties }}' > src/main/resources/oauth.properties
        echo '${{ inputs.application-properties }}' > src/main/resources/application.properties
        echo '${{ inputs.jpadatastore-properties }}' > src/main/resources/jpadatastore.properties
    - name: Install data models
      shell: bash
      run: |
        git clone https://${{ inputs.data-models-repo-token }}@github.com/${{ inputs.data-models-repo-org }}/${{ inputs.data-models-repo-name }}.git ../jpa-models
        cd ../jpa-models
        mvn clean install
