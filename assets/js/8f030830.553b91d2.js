"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[618],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),u=r,g=d["".concat(p,".").concat(u)]||d[u]||m[u]||o;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7857:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:3,title:"Development"},i=void 0,s={unversionedId:"development",id:"development",title:"Development",description:"Running Tests",source:"@site/docs/development.md",sourceDirName:".",slug:"/development",permalink:"/astraios/docs/development",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/development.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Development"},sidebar:"tutorialSidebar",previous:{title:"Setup",permalink:"/astraios/docs/setup"},next:{title:"JPA through Elide Middleware",permalink:"/astraios/docs/elide"}},p={},l=[{value:"Running Tests",id:"running-tests",level:2},{value:"Packaging",id:"packaging",level:2},{value:"Running Webservice in Docker Compose",id:"running-webservice-in-docker-compose",level:2},{value:"Step 1: Defining Data Models",id:"step-1-defining-data-models",level:3},{value:"Step 2: Spinning Up Docker Compose",id:"step-2-spinning-up-docker-compose",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"Database Does Not Have My Model Packages&#39;s Bean Table",id:"database-does-not-have-my-model-packagess-bean-table",level:4},{value:"Entity Missing Default Constructor",id:"entity-missing-default-constructor",level:3},{value:"How to Exclude GraphQL Feature",id:"how-to-exclude-graphql-feature",level:3},{value:"Running Webservice in Standalone Jetty (Production)",id:"running-webservice-in-standalone-jetty-production",level:2},{value:"Download Jetty",id:"download-jetty",level:3},{value:"Setting Up Standalone Jetty",id:"setting-up-standalone-jetty",level:3},{value:"Running Webservice",id:"running-webservice",level:3}],c={toc:l},d="wrapper";function m(e){let{components:t,...o}=e;return(0,r.kt)(d,(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"running-tests"},"Running Tests"),(0,r.kt)("p",null,"The following commands runs both unit and integration tests"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mvn clean verify\n")),(0,r.kt)("p",null,"For IT tests, we use ",(0,r.kt)("a",{parentName:"p",href:"https://qubitpi.github.io/testcontainers-java/"},"Testcontainers")," instead of ",(0,r.kt)("a",{parentName:"p",href:"https://mysql.jcabi.com/"},"jcabi-mysql")," because the latter is hard to configure and debug and\n",(0,r.kt)("a",{parentName:"p",href:"https://qubitpi.github.io/testcontainers-java/"},"Testcontainers")," support more types of db, such as mongo"),(0,r.kt)("h2",{id:"packaging"},"Packaging"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mvn clean package\n")),(0,r.kt)("p",null,"A ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/WAR_(file_format)"},"WAR file")," named ",(0,r.kt)("strong",{parentName:"p"},"astraios-1.0-SNAPSHOT.war")," will\nbe generated under ",(0,r.kt)("em",{parentName:"p"},"target")," directory for ",(0,r.kt)("a",{parentName:"p",href:"#running-in-standalone-jetty"},"running in Jetty")),(0,r.kt)("h2",{id:"running-webservice-in-docker-compose"},"Running Webservice in Docker Compose"),(0,r.kt)("h3",{id:"step-1-defining-data-models"},"Step 1: Defining Data Models"),(0,r.kt)("p",null,"To inject ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/yahoo/elide/tree/master/elide-standalone#create-models"},"Elide model package"),", simply put\nthe models in a separate JAR and include it as a dependency in POM. If the model package is internal and cannot be\nvisible publicly, either make the astraios project private or public with model package dependency info\n",(0,r.kt)("a",{parentName:"p",href:"https://maven.apache.org/examples/injecting-properties-via-settings.html"},"injected via settings.xml"),", for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<project>\n\n    ...\n\n    <dependencies>\n        <dependency>\n            <groupId>${astraios.model.package.jar.group.id}</groupId>\n            <artifactId>${astraios.model.package.jar.artifact.id}</artifactId>\n            <version>${astraios.model.package.jar.version}</version>\n        </dependency>\n    </dependencies>\n\n    ...\n\n    <repositories>\n        <repository>\n            <id>${astraios.model.package.repo.id}</id>\n            <name>Astraios model pacakge JAR repository</name>\n            <url>${astraios.model.package.repo.url}</url>\n        </repository>\n    </repositories>\n\n    ...\n\n</project>\n")),(0,r.kt)("p",null,"with a corresponding ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.m2/settings.xml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"\n          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0\n                      http://maven.apache.org/xsd/settings-1.0.0.xsd">\n\n    <profiles>\n        <profile>\n            <id>astraios-config-properties</id>\n            <properties>\n                <astraios.model.package.jar.group.id>com.mycompnay</astraios.model.package.jar.group.id>\n                <astraios.model.package.jar.artifact.id>my-model-package</astraios.model.package.jar.artifact.id>\n                <astraios.model.package.jar.version>1.0.7</astraios.model.package.jar.version>\n                <astraios.model.package.repo.id>mycompany-maven-repo-id</astraios.model.package.repo.id>\n                <astraios.model.package.repo.url>\n                    https://private.mvnrepository.com/artifact/com.company/my-model-package\n                </astraios.model.package.repo.url>\n            </properties>\n        </profile>\n    </profiles>\n\n\n    <activeProfiles>\n        <activeProfile>astraios-config-properties</activeProfile>\n    </activeProfiles>\n\n    <servers>\n        ...\n    </servers>\n</settings>\n')),(0,r.kt)("p",null,"Lastly, if IntelliJ IDE is used for developing Astraios, please make sure to let IDE pick up the ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.m2/settings.xml")," by\nunchecking the ",(0,r.kt)("em",{parentName:"p"},"Use settings from .mvn/maven.config"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Error loading load-m2-settings.png",src:n(8200).Z,width:"3584",height:"2240"})),(0,r.kt)("h3",{id:"step-2-spinning-up-docker-compose"},"Step 2: Spinning Up Docker Compose"),(0,r.kt)("p",null,"Astraios can run in ","[Docker Compose]"," for the following purposes"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Decoupling frontend and backend developments"),(0,r.kt)("li",{parentName:"ol"},"Making it easy to run E2E testing of Astraios-backed application in CI/CD")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Docker Compose designed here is intended for local development and testing purposes ONLY! ",(0,r.kt)("em",{parentName:"p"},"It is strongly discouraged\nto run this Docker Compose in production!"))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Error Loading docker-compose.png",src:n(3386).Z,width:"732",height:"492"})),(0,r.kt)("p",null,"Simply run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:paion-data/astraios.git\ncd astraios\nmvn clean package\nMODEL_PACKAGE_NAME=$TEST_MODEL_PACKAGE_NAME docker compose up --build --force-recreate\n")),(0,r.kt)("p",null,"where ",(0,r.kt)("inlineCode",{parentName:"p"},"$TEST_MODEL_PACKAGE_NAME")," is the package in config JAR that contains all\n",(0,r.kt)("a",{parentName:"p",href:"https://elide.io/pages/guide/v7/02-data-model.html"},"elide models"),". It can be set, for example, at command line with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export $TEST_MODEL_PACKAGE_NAME=com.mycompany.models\n")),(0,r.kt)("p",null,"The variable will be ",(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/a/58900415"},"passed")," into Docker Compose file."),(0,r.kt)("h3",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("h4",{id:"database-does-not-have-my-model-packagess-bean-table"},"Database Does Not Have My Model Packages's Bean Table"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"If tests is running in IntelliJ IDE"),", make sure the model package JAR it is in IDE's ",(0,r.kt)("strong",{parentName:"p"},"External Libraries")),(0,r.kt)("p",null,"Otherwise, the dependency injection didn't find a bean class under the package specified by\n",(0,r.kt)("a",{parentName:"p",href:"#step-1-defining-data-models"},"$TEST_MODEL_PACKAGE_NAME")),(0,r.kt)("h3",{id:"entity-missing-default-constructor"},"Entity Missing Default Constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[main] INFO  o.h.m.i.EntityInstantiatorPojoStandard - HHH000182: No default (no-argument) constructor for\nclass: ... (class must be instantiated by Interceptor)\n")),(0,r.kt)("p",null,"Simply add a no-args constructor to the bean class."),(0,r.kt)("h3",{id:"how-to-exclude-graphql-feature"},"How to Exclude GraphQL Feature"),(0,r.kt)("p",null,"To optionally disable GraphQL endpoints, exclude corresponding dependencies in POM. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"        <dependency>\n            <groupId>com.yahoo.elide</groupId>\n            <artifactId>elide-core</artifactId>\n            <version>7.0.0-pr6</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>com.yahoo.elide</groupId>\n                    <artifactId>elide-graphql</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n")),(0,r.kt)("h2",{id:"running-webservice-in-standalone-jetty-production"},"Running Webservice in Standalone Jetty (Production)"),(0,r.kt)("h3",{id:"download-jetty"},"Download Jetty"),(0,r.kt)("p",null,"For JDK ",(0,r.kt)("strong",{parentName:"p"},"17"),", which is Astraios' Java version, it's been tested that Jetty ",(0,r.kt)("em",{parentName:"p"},"11.0.15")," worked. Hence, we will use\n",(0,r.kt)("a",{parentName:"p",href:"https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-home/11.0.15/jetty-home-11.0.15.tar.gz"},'"11.0.15" release')," as\nan example:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Error loading download-jetty.png",src:n(3925).Z,width:"3584",height:"1878"})),(0,r.kt)("p",null,"Put the ",(0,r.kt)("inlineCode",{parentName:"p"},"tar.gz")," file into a location of your choice as the installation path and extract the Jetty binary using"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tar -xzvf jetty-home-11.0.15.tar.gz\n")),(0,r.kt)("p",null,"The extracted directory ",(0,r.kt)("em",{parentName:"p"},"jetty-home-11.0.15")," is the Jetty distribution. We call this directory ",(0,r.kt)("strong",{parentName:"p"},"$JETTY_HOME"),", which\nshould not be modified."),(0,r.kt)("h3",{id:"setting-up-standalone-jetty"},"Setting Up Standalone Jetty"),(0,r.kt)("p",null,"Our ",(0,r.kt)("a",{parentName:"p",href:"#packaging"},"WAR file")," will be dropped to a directory where Jetty can pick up and run. We call this directory\n",(0,r.kt)("strong",{parentName:"p"},"$JETTY_BASE"),", which is usually different from the ",(0,r.kt)("em",{parentName:"p"},"$JETTY_HOME"),". The ",(0,r.kt)("em",{parentName:"p"},"$JETTY_BASE")," also contains container runtime\nconfigs. In short, the Standalone Jetty container will be setup with"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export JETTY_HOME=/path/to/jetty-home-11.0.15\nmkdir -p /path/to/jetty-base\ncd /path/to/jetty-base\njava -jar $JETTY_HOME/start.jar --add-module=annotations,server,http,deploy,servlet,webapp,resources,jsp\n")),(0,r.kt)("p",null,"where ",(0,r.kt)("inlineCode",{parentName:"p"},"/path/to/")," is the ",(0,r.kt)("em",{parentName:"p"},"absolute")," path to the directory containing the ",(0,r.kt)("inlineCode",{parentName:"p"},"jetty-home-11.0.15")," directory"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"--add-module=annotations,server,http,deploy,servlet,webapp,resources,jsp")," is how we configure the Jetty\ncontainer."),(0,r.kt)("p",null,"Lastly, drop the ",(0,r.kt)("a",{parentName:"p",href:"#packaging"},"WAR file")," into ",(0,r.kt)("strong",{parentName:"p"},"/path/to/jetty-base/webapps")," directory and rename the WAR file to\n",(0,r.kt)("strong",{parentName:"p"},"ROOT.war"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mv /path/to/war-file /path/to/jetty-base/webapps/ROOT.war\n")),(0,r.kt)("h3",{id:"running-webservice"},"Running Webservice"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"java -jar $JETTY_HOME/start.jar\n")),(0,r.kt)("p",null,"The webservice will run on port ",(0,r.kt)("strong",{parentName:"p"},"8080"),", and you will see the data you inserted"))}m.isMDXComponent=!0},3386:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/docker-compose-c901c60cce997d66d07b7b62b7678287.png"},3925:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/download-jetty-edc103f9f296011d2a6f18b625bff490.png"},8200:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/load-m2-settings-8c90138e53bba78c2a44ea1c6304f377.png"}}]);